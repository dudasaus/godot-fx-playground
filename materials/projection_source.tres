[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://q4ltgvu4jk5g"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_xaylx"]
parameter_name = "ProjectorColor"
qualifier = 1

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_hvsto"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_dpo7r"]
parameter_name = "ProjectionPower"
default_value_enabled = true
default_value = 2.0

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

global uniform vec4 ProjectorColor : source_color;
uniform float ProjectionPower = 2;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = ProjectorColor;


// FloatParameter:4
	float n_out4p0 = ProjectionPower;


// VectorOp:3
	vec4 n_out3p0 = n_out2p0 * vec4(n_out4p0);


// Output:0
	EMISSION = vec3(n_out3p0.xyz);


}
"
graph_offset = Vector2(-285.28, 71.1475)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_xaylx")
nodes/fragment/2/position = Vector2(-540, 320)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorOp_hvsto")
nodes/fragment/3/position = Vector2(-280, 360)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatParameter_dpo7r")
nodes/fragment/4/position = Vector2(-620, 540)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 4, 0, 3, 1, 3, 0, 0, 5)
